extends ../layout

//- script.
//-   function switchTab(tab) {
//-   // Reset all buttons
//-   const tabs = document.querySelectorAll('.tab-btn');
//-   tabs.forEach(button => {
//-   button.classList.remove('bg-primary', 'text-white');
//-   button.classList.add('hover:bg-gray-200');
//-   });
//-   // Hide all content
//-   const contentTabs = document.querySelectorAll('.content-tab');
//-   contentTabs.forEach(tabContent => tabContent.classList.add('hidden'));
//-   // Show selected tab content and highlight the button
//-   document.getElementById(`${tab}-tab`).classList.remove('hidden');
//-   const activeButton = document.getElementById(`${tab}-btn`);
//-   activeButton.classList.remove('hover:bg-gray-200');
//-   activeButton.classList.add('bg-primary', 'text-white');
//-   }

block header-left
    a.btn-icon(type="button", x-ref="closeEditor", href="/")
        i.fa.fa-arrow-left

block header-center
    .flex.flex-col.justify-center.gap-2.w-full(class="sm:flex-row")
        template(x-for="tab in settings.tabs")
            button.flex-1.btn(
                type="button",
                @click="settings.active = tab",
                class="!rounded-lg",
                :class="{ 'text-white bg-primary': settings.active === tab }"
            )
                i.fa.fa-lg.fa-fw(:class="`fa-${settings.icons[settings.tabs.indexOf(tab)]}`")
                span.ms-4(x-text="tab")

block content
    .w-full.max-w-2xl.p-8.mx-auto(x-data="settings")
        template(x-if="settings.active === 'Profile'")
            .flex.flex-col.gap-8
                +section-header("Profile", "user")

                .flex.flex-wrap.items-center.gap-4
                    img.size-20.rounded-full(:src="profile.image ? `${API_URL}/api/${profile.image}` : DEFAULT_PROFILE_IMAGE")
                    
                    .flex-1
                        p.text-lg(x-text="profile.display_name")
                        p.text-sm.text-gray-500(x-text="profile.email")

                    .flex-1.flex.gap-2
                        input.hidden(type="file", x-ref="fileInput", @change=`
                            const file = $event.target.files[0];
                            if (!file) notyf.error("No file uploaded");

                            const filePath = await uploadImage(file);
                            if (filePath) await updateAvatar(filePath);
                        `)

                        button.flex-1.btn.text-white.bg-primary(type="button", @click="$refs.fileInput.click()")
                            i.fa.fa-arrow-up-from-bracket
                            span.ms-4 Upload

                        button.flex-1.btn.text-primary.border(type="button", @click="await resetAvatar()")
                            i.fa.fa-arrow-rotate-left
                            span.ms-4 Reset

                +section-header("Edit info", "pencil")

                form.flex.flex-col.gap-4(
                    x-data="{ loading: false }",
                    @submit.prevent=`await withLoading((v) => loading = v, () =>
                        updateProfile(formToJSON(new FormData($el)))
                    )`
                )
                    .flex.flex-col.gap-4(class="sm:flex-row")
                        label.flex-1(for="full-name")
                            span Full name
                            input#full-name.form-input(type="text", name="display_name", :value="profile.display_name")

                        label.flex-1(for="email")
                            span Email
                            input#email.form-input(type="email", name="email", :value="profile.email", disabled, readonly)

                    button.btn.w-max.text-white.bg-primary(type="submit", :disabled="loading")
                        .spinner.me-2(:class="{ 'hidden': !loading }")
                        | Save changes

        template(x-if="settings.active === 'Security'")
            .flex.flex-col.gap-8
                +section-header("Change password", "lock")

                form.flex.flex-col.gap-4(
                    x-data="{ loading: false }",
                    @submit.prevent=`await withLoading((v) => loading = v, () =>
                        changePassword(formToJSON(new FormData($el)))
                    )`
                )
                    label(for="current-pass")
                        span Current password
                        input#current-pass.form-input(type="password", name="current_password", autocomplete="current-password")

                    label(for="new-pass")
                        span New password
                        input#new-pass.form-input(type="password", name="new_password", autocomplete="new-password")

                    label(for="confirm-pass")
                        span Confirm password
                        input#confirm-pass.form-input(type="password", name="confirm_password", autocomplete="new-password")

                    button.btn.w-max.text-white.bg-primary(type="submit", :disabled="loading")
                        .spinner.me-2(:class="{ 'hidden': !loading }")
                        | Save changes

        template(x-if="settings.active === 'Appearance'")
            .flex.flex-col.gap-8
                +section-header("Theme", "palette")

                .flex.justify-between.items-center
                    span Dark mode

                    .flex
                        btn.btn.rounded-e-none(
                            type="button",
                            @click="await updateProfile({ theme: 'auto' })",
                            :class="profile.theme === 'auto' ? 'text-white bg-primary' : 'border'"
                        )
                            i.fa.fa-circle-half-stroke
                            span.hidden.ms-4(class="sm:inline") Auto

                        btn.btn.rounded-none(
                            type="button",
                            @click="await updateProfile({ theme: 'light' })",
                            :class="profile.theme === 'light' ? 'text-white bg-primary' : 'border'"
                        )
                            i.fa.fa-sun
                            span.hidden.ms-4(class="sm:inline") Light

                        btn.btn.rounded-s-none(
                            type="button",
                            @click="await updateProfile({ theme: 'dark' })",
                            :class="profile.theme === 'dark' ? 'text-white bg-primary' : 'border'"
                        )
                            i.fa.fa-moon
                            span.hidden.ms-4(class="sm:inline") Dark
//- .bg-white.shadow-2xl.rounded-2xl.w-full.max-w-5xl.flex.overflow-hidden
//-   // Sidebar
//-   .bg-gray-50.p-6.space-y-4(class='w-1/4')
//-     h2.text-2xl.font-bold.text-gray-800 Settings
//-     ul.space-y-2
//-       li
//-         button#profile-btn.tab-btn.w-full.text-left.px-4.py-2.rounded-lg.bg-primary.text-white(onclick="switchTab('profile')") Profile
//-       li
//-         button#security-btn.tab-btn.w-full.text-left.px-4.py-2.rounded-lg(onclick="switchTab('security')" class='hover:bg-gray-200') Security
//-       li
//-         button#appearance-btn.tab-btn.w-full.text-left.px-4.py-2.rounded-lg(onclick="switchTab('appearance')" class='hover:bg-gray-200') Appearance
//-   // Content
//-   .p-8.space-y-6(class='w-3/4')
//-     .flex.items-center.space-x-4
//-       .w-20.h-20.bg-gray-200.rounded-full.flex.items-center.justify-center.text-3xl.font-bold.text-gray-600 K
//-       div
//-         p.text-lg.font-medium Ki&#x1EC7;t
//-         p.text-sm.text-gray-500 kiet@example.com
//-     // Profile Tab
//-     #profile-tab.content-tab.space-y-6
//-       form.grid.grid-cols-1.gap-6(class='md:grid-cols-2')
//-         div
//-           label.block.mb-1.font-medium Name
//-           input.w-full.border.rounded-lg.p-2(type='text' placeholder='Kiá»‡t')
//-         div
//-           label.block.mb-1.font-medium Email
//-           input.w-full.border.rounded-lg.p-2(type='email' placeholder='kiet@example.com')
//-         div
//-           label.block.mb-1.font-medium Phone
//-           input.w-full.border.rounded-lg.p-2(type='tel' placeholder='0123456789')
//-         div
//-           label.block.mb-1.font-medium Location
//-           input.w-full.border.rounded-lg.p-2(type='text' placeholder='Ho Chi Minh City')
//-     // Security Tab
//-     #security-tab.content-tab.space-y-6.hidden
//-       form.space-y-6
//-         div
//-           label.block.mb-1.font-medium Current Password
//-           input.w-full.border.rounded-lg.p-2(type='password' placeholder='Current Password')
//-         div
//-           label.block.mb-1.font-medium New Password
//-           input.w-full.border.rounded-lg.p-2(type='password' placeholder='New Password')
//-         div
//-           label.block.mb-1.font-medium Confirm New Password
//-           input.w-full.border.rounded-lg.p-2(type='password' placeholder='Confirm New Password')
//-     // Appearance Tab
//-     #appearance-tab.content-tab.space-y-6.hidden
//-       form.space-y-6
//-         div
//-           label.block.mb-1.font-medium Theme
//-           select.w-full.border.rounded-lg.p-2
//-             option(value='light') Light
//-             option(value='dark') Dark
//-         div
//-           label.block.mb-1.font-medium Font Style
//-           select.w-full.border.rounded-lg.p-2
//-             option(value='sans-serif') Sans-serif
//-             option(value='serif') Serif
//-             option(value='monospace') Monospace
//-     .pt-4
//-       button.px-6.py-2.bg-primary.text-white.rounded-lg.transition(class='hover:bg-secondary') Save Changes
